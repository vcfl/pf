local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/matas3535/gamesneeze/main/Library.lua"))()

local Window = Library:New({
    Name = "ESP Script"
})

local MainPage = Window:Page({
    Name = "Main"
})

local Page = Window:Page({
    Name = "ESP Settings"
})

local CustomizationPage = Window:Page({
    Name = "Customization"
})

local PageSection1 = Page:Section({
    Name = "ESP Options", 
    Fill = true, 
    Side = "Left"
})

local AimbotSection = MainPage:Section({
    Name = "Aimbot Options", 
    Fill = true, 
    Side = "Left"
})

local players = game:GetService("Players")
local rs = game:GetService("RunService")
local lp = players.LocalPlayer
local camera = workspace.CurrentCamera
local mouse = lp:GetMouse()

-- Default ESP settings
local settings = {
    EnableESP = false,
    Box = true,
    Name = true,
    Distance = true,
    Health = true,
    HealthPercentage = true, -- Show health percentage
    BoxColor = Color3.fromRGB(255, 0, 0),
    NameColor = Color3.fromRGB(255, 255, 255),
    DistanceColor = Color3.fromRGB(255, 255, 255),
    HealthBarColor = Color3.fromRGB(50, 255, 50),
    HealthBarBackgroundColor = Color3.fromRGB(0, 0, 0),
    HealthBarThickness = 4,
    HealthPercentColor = Color3.fromRGB(255, 255, 255),
    BoxThickness = 2,
    TextSize = 12,
    Font = Enum.Font.Code,
    DrawLines = false,  -- New setting for drawing lines
    EnableAimbot = false, -- Aimbot toggle
    HighlightESP = false -- Highlight toggle
}

local espData = {} -- Stores all ESP drawings and connections for players

-- Function to create new drawing elements
local function NewLine(color, thickness)
    local line = Drawing.new("Line")
    line.Visible = false
    line.Color = color
    line.Thickness = thickness
    return line
end

local function NewText(color, size)
    local text = Drawing.new("Text")
    text.Visible = false
    text.Color = color
    text.Size = size
    text.Center = true
    text.Outline = true
    return text
end

-- Function to clear all ESP drawings for a player
local function clearESP(player)
    if espData[player] then
        for _, drawing in pairs(espData[player].elements) do
            drawing.Visible = false
            drawing:Remove()
        end
        if espData[player].connection then
            espData[player].connection:Disconnect()
        end
        espData[player] = nil
    end
end

-- Function to update visibility of specific ESP components
local function updateESPVisibility(player)
    if espData[player] then
        local elements = espData[player].elements
        elements.boxTop.Visible = settings.EnableESP and settings.Box
        elements.boxBottom.Visible = settings.EnableESP and settings.Box
        elements.boxLeft.Visible = settings.EnableESP and settings.Box
        elements.boxRight.Visible = settings.EnableESP and settings.Box

        elements.name.Visible = settings.EnableESP and settings.Name
        elements.distance.Visible = settings.EnableESP and settings.Distance
        elements.healthPercent.Visible = settings.EnableESP and settings.Health and settings.HealthPercentage
        elements.healthBar.Visible = settings.EnableESP and settings.Health
        elements.healthBarBackground.Visible = settings.EnableESP and settings.Health
    end
end

-- Function to create ESP for a player
local function createESP(player)
    -- Skip ESP for the local player
    if player == lp then
        return
    end

    clearESP(player) -- Clean up any existing ESP for this player first

    local elements = {
        name = NewText(settings.NameColor, settings.TextSize),
        distance = NewText(settings.DistanceColor, settings.TextSize),
        healthPercent = NewText(settings.HealthPercentColor, settings.TextSize),
        healthBarBackground = NewLine(settings.HealthBarBackgroundColor, 2),
        healthBar = NewLine(settings.HealthBarColor, settings.HealthBarThickness),
        boxTop = NewLine(settings.BoxColor, settings.BoxThickness),
        boxBottom = NewLine(settings.BoxColor, settings.BoxThickness),
        boxLeft = NewLine(settings.BoxColor, settings.BoxThickness),
        boxRight = NewLine(settings.BoxColor, settings.BoxThickness)
    }

    local connection
    connection = rs.RenderStepped:Connect(function()
        if not settings.EnableESP or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
            clearESP(player)
            return
        end

        local hrp = player.Character.HumanoidRootPart
        local humanoid = player.Character:FindFirstChild("Humanoid")
        local screenPos, onScreen = camera:WorldToViewportPoint(hrp.Position)

        if onScreen and humanoid and humanoid.Health > 0 then
            local sizeX, sizeY = 4, 6
            local camRight = camera.CFrame.RightVector
            local camUp = camera.CFrame.UpVector

            local topLeftWorld = hrp.Position + (-camRight * sizeX / 2) + (camUp * sizeY / 2)
            local topRightWorld = hrp.Position + (camRight * sizeX / 2) + (camUp * sizeY / 2)
            local bottomLeftWorld = hrp.Position + (-camRight * sizeX / 2) + (-camUp * sizeY / 2)
            local bottomRightWorld = hrp.Position + (camRight * sizeX / 2) + (-camUp * sizeY / 2)

            local topLeft = camera:WorldToViewportPoint(topLeftWorld)
            local topRight = camera:WorldToViewportPoint(topRightWorld)
            local bottomLeft = camera:WorldToViewportPoint(bottomLeftWorld)
            local bottomRight = camera:WorldToViewportPoint(bottomRightWorld)

            -- Box
            if settings.Box then
                elements.boxTop.From = Vector2.new(topLeft.X, topLeft.Y)
                elements.boxTop.To = Vector2.new(topRight.X, topRight.Y)

                elements.boxBottom.From = Vector2.new(bottomLeft.X, bottomLeft.Y)
                elements.boxBottom.To = Vector2.new(bottomRight.X, bottomRight.Y)

                elements.boxLeft.From = Vector2.new(topLeft.X, topLeft.Y)
                elements.boxLeft.To = Vector2.new(bottomLeft.X, bottomLeft.Y)

                elements.boxRight.From = Vector2.new(topRight.X, topRight.Y)
                elements.boxRight.To = Vector2.new(bottomRight.X, bottomRight.Y)
            end

            -- Name
            if settings.Name then
                elements.name.Text = player.Name
                elements.name.Position = Vector2.new(screenPos.X, topLeft.Y - 20)
            end

            -- Distance
            if settings.Distance then
                local distance = (lp.Character.HumanoidRootPart.Position - hrp.Position).Magnitude
                elements.distance.Text = string.format("%.1f studs", distance)
                elements.distance.Position = Vector2.new(screenPos.X, topLeft.Y - 35)
            end

            -- Health
            if settings.Health then
                local healthRatio = humanoid.Health / humanoid.MaxHealth
                local healthBarStart = Vector2.new(bottomLeft.X - 10, bottomLeft.Y)
                local healthBarEnd = Vector2.new(bottomLeft.X - 10, topLeft.Y)
                local healthBarFill = Vector2.new(healthBarStart.X, healthBarStart.Y - ((healthBarStart.Y - healthBarEnd.Y) * healthRatio))

                elements.healthBarBackground.From = healthBarStart
                elements.healthBarBackground.To = healthBarEnd
                elements.healthBar.From = healthBarStart
                elements.healthBar.To = healthBarFill

                if settings.HealthPercentage then
                    elements.healthPercent.Text = string.format("%.0f%%", healthRatio * 100)
                    elements.healthPercent.Position = Vector2.new(healthBarEnd.X - 25, (healthBarEnd.Y + healthBarStart.Y) / 2)
                end
            end

            -- Highlight logic based on Enable ESP and Highlight ESP
            if settings.EnableESP and settings.HighlightESP then
                if not player.Character:FindFirstChild("Highlight") then
                    local highlight = Instance.new("Highlight")
                    highlight.Adornee = player.Character
                    highlight.FillColor = settings.BoxColor
                    highlight.OutlineColor = Color3.new(1, 1, 1)
                    highlight.OutlineTransparency = 0.5
                    highlight.Parent = player.Character
                end
            elseif not settings.EnableESP or not settings.HighlightESP then
                local highlight = player.Character:FindFirstChild("Highlight")
                if highlight then
                    highlight:Destroy()
                end
            end

            -- Update visibility instantly when toggles are changed
            updateESPVisibility(player)
        else
            -- Hide ESP elements when not on screen
            for _, element in pairs(elements) do
                element.Visible = false
            end
        end
    end)

    espData[player] = { elements = elements, connection = connection }
end

-- Function to update ESP for all players
local function updateESPForAllPlayers()
    for _, player in pairs(players:GetPlayers()) do
        if settings.EnableESP then
            createESP(player)
        end
    end
end

-- Connect to player added event to handle newly joined players
players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        if settings.EnableESP then
            createESP(player)
        end
    end)
end)

-- Main toggle for ESP in the Main tab
local ToggleESP = AimbotSection:Toggle({
    Name = "Enable ESP",
    Default = false,
    callback = function(value)
        settings.EnableESP = value
        updateESPForAllPlayers() -- Update ESP for all players
    end
})

-- Aimbot toggle with Q press
local ToggleAimbot = AimbotSection:Toggle({
    Name = "Enable Aimbot",
    Default = false,
    callback = function(value)
        settings.EnableAimbot = value
    end
})

-- Function to find the closest player to the mouse
local function getClosestPlayer()
    local closestPlayer = nil
    local closestDistance = math.huge
    for _, player in pairs(players:GetPlayers()) do
        if player ~= lp and player.Character and player.Character:FindFirstChild("Head") and player.Character.Humanoid.Health > 0 then
            local head = player.Character.Head
            local screenPos, onScreen = camera:WorldToViewportPoint(head.Position)
            if onScreen then
                local mousePos = Vector2.new(mouse.X, mouse.Y)
                local distance = (mousePos - Vector2.new(screenPos.X, screenPos.Y)).Magnitude
                if distance < closestDistance then
                    closestPlayer = player
                    closestDistance = distance
                end
            end
        end
    end
    return closestPlayer
end

-- Variables to handle toggle state
local aimbotLocked = false
local currentTarget = nil

-- Aimbot functionality when Q is pressed
local function toggleAimbot()
    if settings.EnableAimbot then
        if aimbotLocked then
            -- Unlock
            aimbotLocked = false
            currentTarget = nil
        else
            -- Lock onto closest player
            currentTarget = getClosestPlayer()
            if currentTarget then
                aimbotLocked = true
            end
        end
    end
end

-- Handle Q key press for toggling lock on/off
mouse.KeyDown:Connect(function(key)
    if key:lower() == "q" then
        toggleAimbot()
    end
end)

-- Update camera if the aimbot is locked on to a target
rs.RenderStepped:Connect(function()
    if aimbotLocked and currentTarget then
        local targetHeadPos = currentTarget.Character.Head.Position
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetHeadPos)
    end
end)

-- ESP component toggles
local ToggleBox = PageSection1:Toggle({
    Name = "Enable Box ESP",
    Default = true,
    callback = function(value)
        settings.Box = value
        updateESPForAllPlayers()
    end
})

local ToggleName = PageSection1:Toggle({
    Name = "Enable Name ESP",
    Default = true,
    callback = function(value)
        settings.Name = value
        updateESPForAllPlayers()
    end
})

local ToggleDistance = PageSection1:Toggle({
    Name = "Enable Distance ESP",
    Default = true,
    callback = function(value)
        settings.Distance = value
        updateESPForAllPlayers()
    end
})

local ToggleHealth = PageSection1:Toggle({
    Name = "Enable Health ESP",
    Default = true,
    callback = function(value)
        settings.Health = value
        updateESPForAllPlayers()
    end
})

local ToggleHealthPercentage = PageSection1:Toggle({
    Name = "Enable Health Percentage",
    Default = true,
    callback = function(value)
        settings.HealthPercentage = value
        updateESPForAllPlayers()
    end
})

-- Highlight toggle
local ToggleHighlight = PageSection1:Toggle({
    Name = "Enable Highlight ESP",
    Default = false,
    callback = function(value)
        settings.HighlightESP = value
        updateESPForAllPlayers()
    end
})

-- Initialize window
Window:Initialize()
